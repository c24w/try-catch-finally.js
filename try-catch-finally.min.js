// try-catch-finally.js | (c) Chris Watson | http://git.io/tcf
!function(r,t){"use strict";"function"==typeof define&&define.amd?define("try-catch-finally",[],t):"object"==typeof module&&module.exports?module.exports=t():r.try=r._try=t()}(this,function(u){"use strict";return function(r){var n={};function e(){return"error"in n}function o(r){return n.error===r||function(r,t){return"string"==typeof t&&Object.prototype.toString.call(r).toLowerCase()==="[object "+t.toLowerCase()+"]"}(n.error,r)||function(r,t){if(null!=r&&"function"==typeof t)return u(r)instanceof t}(n.error,r)}try{r&&r()}catch(r){n.error=r}var i={catch:function(r,t){return 0<arguments.length&&e()&&(void 0===t||o(r))&&((t=t||r)(n.error),delete n.error),i},finally:function(r){if(r&&r(),e())throw n.error}};return i}}.bind(null,function(r){return function(){return this}.call(r)}));
